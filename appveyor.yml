environment:
  packageVersion: 2.0.0

version: '$(packageVersion).{build}'
image: Visual Studio 2019

# Do not build on tags (GitHub, Bitbucket, GitLab, Gitea).
skip_tags: true

shallow_clone: true

dotnet_csproj:
  patch: true
  file: '**\*.csproj;**\*.fsproj'
  assembly_version: '{version}'
  file_version: '{version}'
  version: '$(packageVersion)'

branches:
  only:
    - master
    - develop

configuration:
  - Debug
  - Release

matrix:
  fast_finish: true

before_build:
  - cmd: cd Acolyte.NET
  - cmd: dotnet restore

build:
  verbosity: minimal

after_build:
  - ps: >-
      if (($env:configuration -eq "Release") -and ($env:branch -eq "master"))
      {
        dotnet pack --configuration Release --no-build "../Acolyte.NET"
      }

test:
  assemblies:
    - '**\*.Tests.dll'

# F# tests does not execute at all.
after_test:
  - ps: >-
      if ($env:configuration -eq "Debug")
      {
        dotnet test "Tests/Acolyte.FSharp.Tests/Acolyte.FSharp.Tests.fsproj" --configuration Debug --no-build
      }
      else
      {
        dotnet test "Tests/Acolyte.FSharp.Tests/Acolyte.FSharp.Tests.fsproj" --configuration Release --no-build
      }

  # Upload all NuGet packages to release assets.
artifacts:
  - path: '**\*.nupkg'

# Deploy from master branch only.
deploy:
  # Deploy to NuGet repository.
  - provider: NuGet
    api_key:
      secure: hnKm9eh2iZree0QLhfMG6dkeBzGsJ3UNZpHbddhSB99FuaZxlh8Z+FxHX3c/l3Re
    skip_symbols: false
    on:
      branch: master
      configuration: Release

  # Deploy to GitHub Releases.
  - provider: GitHub
    auth_token:
      secure: ex3ZUcCal1DZuXKOFoKSmiAF/NWXttFMYOQEETqrGvIanWZdyP1sesEoOmy3Rvw6
    tag: 'v$(packageVersion)'
    release: 'Acolyte.NET v$(packageVersion)'
    description: 'TODO: write a description.'
    draft: false
    prerelease: false
    on:
      branch: master
      configuration: Release

pull_requests:
    do_not_increment_build_number: true

nuget:
    disable_publish_on_pr: true
